Основы кластера Kafka — это продюсер, брокер и консумер. Продюсер пишет сообщения в лог брокера, а консумер его читает.
Apache Kafka управляет логами и организует платформу, которая соединяет поставщиков данных с потребителями и даёт возможность получать упорядоченный поток событий в реальном времени.
Для записи событий в кластер Kafka есть продюсеры — это приложения, которые записывает сообщение в Kafka, тот сохраняет события, 
возвращает подтверждение о записи или acknowledgement. Продюсер получает его и начинает следующую запись.

Кластер Kafka состоит из брокеров. Можно представить систему как дата-центр и серверы в нём. 
При первом знакомстве думайте о Kafka-брокере как о компьютере: это процесс в операционной системе с доступом к своему локальному диску.
Все брокеры соединены друг с другом сетью и действуют сообща, образуя единый кластер. 
Когда мы говорим, что продюсеры пишут события в Kafka-кластер, то подразумеваем, что они работают с брокерами в нём.

Консумеры
События, которые продюсеры записывают на локальные диски брокеров, могут читать консумеры.
Консумеры подписываются на события или поллит (POLL) и получает данные в ответ. Так продолжается по кругу.

Кластер Kafka позволяет изолировать консумеры и продюсеры друг от друга. Продюсер ничего не знает о консумерах при записи данных в брокер, а консумер ничего не знает о продюсере данных.
https://habr.com/ru/companies/sbermarket/articles/738634/
https://habr.com/ru/companies/otus/articles/725168/
https://habr.com/ru/companies/slurm/articles/550934/

Кафка экспортеры
https://github.com/danielqsj/kafka_exporter
https://github.com/seglo/kafka-lag-exporter


Концепция LAG в Кафке
Что такое consumer lag Kafka — это разница между последним смещением, сохраненным брокером, и последним зафиксированным смещением для этого раздела клиентом.
Причины отставания потребителей Kafka
- скачки входящего трафика
- перекос данных в разделах
- медленная обработка заданий
- ошибки в коде и в компонентах конвейера.

Стратегии решения проблемы consumer lag Kafka
Лучшая стратегия решения проблемы отставания потребителей Kafka будет варьироваться в зависимости от основной причины. 
Оптимизация логики обработки, изменение количества разделов, ограничение скорости и настройка конфигурации — это четыре распространенные стратегии решения проблемы задержки потребителей.

Ниже приведены команды для кафки

# отображаем список consumer groups
cd /opt/bitnami/kafka/bin
./kafka-consumer-groups.sh --bootstrap-server localhost:9092 --list
consumer-group1
consumer-group2
consumer-group3

# 
./kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group consumer-group3
GROUP                   TOPIC                    PARTITION  CURRENT-OFFSET  LOG-END-OFFSET  LAG             CONSUMER-ID 

Панельки в графане
- All Consumer Group Lag 
Consumer Group Max Time Lag  - группа консюмеров с максимальной задержка во времени
Consumer Group Time Lag Top Partitions - группа консюмеров с задержка во времени для партиции
Consumer Group Max Offset Lag - максимальные с задержка для групп консюмеров
Consumer Group Offset Lag Top Partition - группа консюмеров со смещением для партиции
- Max Consumer Group Time Lag Over Offset Lag панель для каждой группы потребителей, на которой отображается максимальная задержка во времени на левой оси Y и максимальная задержка смещений на правой оси Y.
- Max Consumer Group Time Lag Over Summed Offsets панель для каждой группы потребителей, на которой отображается максимальная задержка во времени на левой оси Y. 
На правой оси Y отображается сумма последних и последних использованных смещений для всех групповых разделов.
- Kafka Lag Exporter JVM Metrics - JVM метрики для Кафки, используется экспортер "Kafka Lag Exporter"
